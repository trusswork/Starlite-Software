"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles/globals.css":
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles/globals.css ***!
  \********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*! tailwindcss v2.2.19 | MIT License | https://tailwindcss.com *//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\\n\\n/*\\nDocument\\n========\\n*/\\n\\n/**\\nUse a better box model (opinionated).\\n*/\\n\\n*,\\n::before,\\n::after {\\n\\tbox-sizing: border-box;\\n}\\n\\n/**\\nUse a more readable tab size (opinionated).\\n*/\\n\\nhtml {\\n\\t-moz-tab-size: 4;\\n\\t-o-tab-size: 4;\\n\\t   tab-size: 4;\\n}\\n\\n/**\\n1. Correct the line height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n*/\\n\\nhtml {\\n\\tline-height: 1.15; /* 1 */\\n\\t-webkit-text-size-adjust: 100%; /* 2 */\\n}\\n\\n/*\\nSections\\n========\\n*/\\n\\n/**\\nRemove the margin in all browsers.\\n*/\\n\\nbody {\\n\\tmargin: 0;\\n}\\n\\n/**\\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\\n*/\\n\\nbody {\\n\\tfont-family:\\n\\t\\tsystem-ui,\\n\\t\\t-apple-system, /* Firefox supports this but not yet `system-ui` */\\n\\t\\t'Segoe UI',\\n\\t\\tRoboto,\\n\\t\\tHelvetica,\\n\\t\\tArial,\\n\\t\\tsans-serif,\\n\\t\\t'Apple Color Emoji',\\n\\t\\t'Segoe UI Emoji';\\n}\\n\\n/*\\nGrouping content\\n================\\n*/\\n\\n/**\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n*/\\n\\nhr {\\n\\theight: 0; /* 1 */\\n\\tcolor: inherit; /* 2 */\\n}\\n\\n/*\\nText-level semantics\\n====================\\n*/\\n\\n/**\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr[title] {\\n\\t-webkit-text-decoration: underline dotted;\\n\\t        text-decoration: underline dotted;\\n}\\n\\n/**\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n\\tfont-weight: bolder;\\n}\\n\\n/**\\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\\n2. Correct the odd 'em' font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n\\tfont-family:\\n\\t\\tui-monospace,\\n\\t\\tSFMono-Regular,\\n\\t\\tConsolas,\\n\\t\\t'Liberation Mono',\\n\\t\\tMenlo,\\n\\t\\tmonospace; /* 1 */\\n\\tfont-size: 1em; /* 2 */\\n}\\n\\n/**\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n\\tfont-size: 80%;\\n}\\n\\n/**\\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n\\tfont-size: 75%;\\n\\tline-height: 0;\\n\\tposition: relative;\\n\\tvertical-align: baseline;\\n}\\n\\nsub {\\n\\tbottom: -0.25em;\\n}\\n\\nsup {\\n\\ttop: -0.5em;\\n}\\n\\n/*\\nTabular data\\n============\\n*/\\n\\n/**\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n*/\\n\\ntable {\\n\\ttext-indent: 0; /* 1 */\\n\\tborder-color: inherit; /* 2 */\\n}\\n\\n/*\\nForms\\n=====\\n*/\\n\\n/**\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n\\tfont-family: inherit; /* 1 */\\n\\tfont-size: 100%; /* 1 */\\n\\tline-height: 1.15; /* 1 */\\n\\tmargin: 0; /* 2 */\\n}\\n\\n/**\\nRemove the inheritance of text transform in Edge and Firefox.\\n1. Remove the inheritance of text transform in Firefox.\\n*/\\n\\nbutton,\\nselect { /* 1 */\\n\\ttext-transform: none;\\n}\\n\\n/**\\nCorrect the inability to style clickable types in iOS and Safari.\\n*/\\n\\nbutton,\\n[type='button'],\\n[type='reset'],\\n[type='submit'] {\\n\\t-webkit-appearance: button;\\n}\\n\\n/**\\nRemove the inner border and padding in Firefox.\\n*/\\n\\n::-moz-focus-inner {\\n\\tborder-style: none;\\n\\tpadding: 0;\\n}\\n\\n/**\\nRestore the focus styles unset by the previous rule.\\n*/\\n\\n:-moz-focusring {\\n\\toutline: 1px dotted ButtonText;\\n}\\n\\n/**\\nRemove the additional ':invalid' styles in Firefox.\\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\\n*/\\n\\n:-moz-ui-invalid {\\n\\tbox-shadow: none;\\n}\\n\\n/**\\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\\n*/\\n\\nlegend {\\n\\tpadding: 0;\\n}\\n\\n/**\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n\\tvertical-align: baseline;\\n}\\n\\n/**\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n\\theight: auto;\\n}\\n\\n/**\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n\\t-webkit-appearance: textfield; /* 1 */\\n\\toutline-offset: -2px; /* 2 */\\n}\\n\\n/**\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n\\t-webkit-appearance: none;\\n}\\n\\n/**\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to 'inherit' in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n\\t-webkit-appearance: button; /* 1 */\\n\\tfont: inherit; /* 2 */\\n}\\n\\n/*\\nInteractive\\n===========\\n*/\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n\\tdisplay: list-item;\\n}/**\\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\\n * A thin layer on top of normalize.css that provides a starting point more\\n * suitable for web applications.\\n */\\n\\n/**\\n * Removes the default spacing and border for appropriate elements.\\n */\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nbutton {\\n  background-color: transparent;\\n  background-image: none;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nol,\\nul {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/**\\n * Tailwind custom reset styles\\n */\\n\\n/**\\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\\n *    sans-serif font stack as a fallback) as a sane default.\\n * 2. Use Tailwind's default \\\"normal\\\" line-height so the user isn't forced\\n *    to override it to ensure consistency even when using the default theme.\\n */\\n\\nhtml {\\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"; /* 1 */\\n  line-height: 1.5; /* 2 */\\n}\\n\\n\\n/**\\n * Inherit font-family and line-height from `html` so users can set them as\\n * a class directly on the `html` element.\\n */\\n\\nbody {\\n  font-family: inherit;\\n  line-height: inherit;\\n}\\n\\n/**\\n * 1. Prevent padding and border from affecting element width.\\n *\\n *    We used to set this in the html element and inherit from\\n *    the parent element for everything else. This caused issues\\n *    in shadow-dom-enhanced elements like <details> where the content\\n *    is wrapped by a div with box-sizing set to `content-box`.\\n *\\n *    https://github.com/mozdevs/cssremedy/issues/4\\n *\\n *\\n * 2. Allow adding a border to an element by just adding a border-width.\\n *\\n *    By default, the way the browser specifies that an element should have no\\n *    border is by setting it's border-style to `none` in the user-agent\\n *    stylesheet.\\n *\\n *    In order to easily add borders to elements by just setting the `border-width`\\n *    property, we change the default border-style for all elements to `solid`, and\\n *    use border-width to hide them instead. This way our `border` utilities only\\n *    need to set the `border-width` property instead of the entire `border`\\n *    shorthand, making our border utilities much more straightforward to compose.\\n *\\n *    https://github.com/tailwindcss/tailwindcss/pull/116\\n */\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: currentColor; /* 2 */\\n}\\n\\n/*\\n * Ensure horizontal rules are visible by default\\n */\\n\\nhr {\\n  border-top-width: 1px;\\n}\\n\\n/**\\n * Undo the `border-style: none` reset that Normalize applies to images so that\\n * our `border-{width}` utilities have the expected effect.\\n *\\n * The Normalize reset is unnecessary for us since we default the border-width\\n * to 0 on all elements.\\n *\\n * https://github.com/tailwindcss/tailwindcss/issues/362\\n */\\n\\nimg {\\n  border-style: solid;\\n}\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\n  opacity: 1;\\n  color: #9ca3af;\\n}\\n\\ninput:-ms-input-placeholder, textarea:-ms-input-placeholder {\\n  opacity: 1;\\n  color: #9ca3af;\\n}\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1;\\n  color: #9ca3af;\\n}\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/**\\n * Override legacy focus reset from Normalize with modern Firefox focus styles.\\n *\\n * This is actually an improvement over the new defaults in Firefox in our testing,\\n * as it triggers the better focus styles even for links, which still use a dotted\\n * outline in Firefox by default.\\n */\\n \\n:-moz-focusring {\\n\\toutline: auto;\\n}\\n\\ntable {\\n  border-collapse: collapse;\\n}\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/**\\n * Reset links to optimize for opt-in styling instead of\\n * opt-out.\\n */\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/**\\n * Reset form element properties that are easy to forget to\\n * style explicitly so you don't inadvertently introduce\\n * styles that deviate from your design system. These styles\\n * supplement a partial reset that is already applied by\\n * normalize.css.\\n */\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  padding: 0;\\n  line-height: inherit;\\n  color: inherit;\\n}\\n\\n/**\\n * Use the configured 'mono' font family for elements that\\n * are expected to be rendered with a monospace font, falling\\n * back to the system monospace stack if there is no configured\\n * 'mono' font family.\\n */\\n\\npre,\\ncode,\\nkbd,\\nsamp {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\\n}\\n\\n/**\\n * 1. Make replaced elements `display: block` by default as that's\\n *    the behavior you want almost all of the time. Inspired by\\n *    CSS Remedy, with `svg` added as well.\\n *\\n *    https://github.com/mozdevs/cssremedy/issues/14\\n * \\n * 2. Add `vertical-align: middle` to align replaced elements more\\n *    sensibly by default when overriding `display` by adding a\\n *    utility like `inline`.\\n *\\n *    This can trigger a poorly considered linting error in some\\n *    tools but is included by design.\\n * \\n *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210\\n */\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/**\\n * Constrain images and videos to the parent width and preserve\\n * their intrinsic aspect ratio.\\n *\\n * https://github.com/mozdevs/cssremedy/issues/14\\n */\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n/**\\n * Ensure the default browser behavior of the `hidden` attribute.\\n */\\n\\n[hidden] {\\n  display: none;\\n}\\n\\n*, ::before, ::after {\\n\\t--tw-border-opacity: 1;\\n\\tborder-color: rgba(229, 231, 235, var(--tw-border-opacity));\\n}\\n.absolute {\\n\\tposition: absolute;\\n}\\n.relative {\\n\\tposition: relative;\\n}\\n.inset-0 {\\n\\ttop: 0px;\\n\\tright: 0px;\\n\\tbottom: 0px;\\n\\tleft: 0px;\\n}\\n.bottom-\\\\[-5rem\\\\] {\\n\\tbottom: -5rem;\\n}\\n.left-\\\\[-5rem\\\\] {\\n\\tleft: -5rem;\\n}\\n.top-24 {\\n\\ttop: 6rem;\\n}\\n.right-\\\\[-100px\\\\] {\\n\\tright: -100px;\\n}\\n.left-\\\\[50\\\\%\\\\] {\\n\\tleft: 50%;\\n}\\n.bottom-10 {\\n\\tbottom: 2.5rem;\\n}\\n.left-\\\\[15rem\\\\] {\\n\\tleft: 15rem;\\n}\\n.z-10 {\\n\\tz-index: 10;\\n}\\n.ml-\\\\[-21\\\\%\\\\] {\\n\\tmargin-left: -21%;\\n}\\n.mb-3 {\\n\\tmargin-bottom: 0.75rem;\\n}\\n.ml-5 {\\n\\tmargin-left: 1.25rem;\\n}\\n.flex {\\n\\tdisplay: flex;\\n}\\n.h-screen {\\n\\theight: 100vh;\\n}\\n.h-6 {\\n\\theight: 1.5rem;\\n}\\n.w-full {\\n\\twidth: 100%;\\n}\\n.w-6 {\\n\\twidth: 1.5rem;\\n}\\n.flex-row {\\n\\tflex-direction: row;\\n}\\n.items-center {\\n\\talign-items: center;\\n}\\n.overflow-x-hidden {\\n\\toverflow-x: hidden;\\n}\\n.rounded-md {\\n\\tborder-radius: 0.375rem;\\n}\\n.rounded-full {\\n\\tborder-radius: 9999px;\\n}\\n.border-2 {\\n\\tborder-width: 2px;\\n}\\n.border-\\\\[\\\\#5327D0\\\\] {\\n\\t--tw-border-opacity: 1;\\n\\tborder-color: rgba(83, 39, 208, var(--tw-border-opacity));\\n}\\n.border-\\\\[\\\\#B296FF\\\\] {\\n\\t--tw-border-opacity: 1;\\n\\tborder-color: rgba(178, 150, 255, var(--tw-border-opacity));\\n}\\n.bg-\\\\[\\\\#5327D0\\\\] {\\n\\t--tw-bg-opacity: 1;\\n\\tbackground-color: rgba(83, 39, 208, var(--tw-bg-opacity));\\n}\\n.p-2 {\\n\\tpadding: 0.5rem;\\n}\\n.px-5 {\\n\\tpadding-left: 1.25rem;\\n\\tpadding-right: 1.25rem;\\n}\\n.py-3 {\\n\\tpadding-top: 0.75rem;\\n\\tpadding-bottom: 0.75rem;\\n}\\n.text-center {\\n\\ttext-align: center;\\n}\\n.font-primary {\\n\\tfont-family: Oswald, sans-serif;\\n}\\n.font-secondary {\\n\\tfont-family: Lexend, sans-serif;\\n}\\n.text-\\\\[23px\\\\] {\\n\\tfont-size: 23px;\\n}\\n.text-\\\\[100px\\\\] {\\n\\tfont-size: 100px;\\n}\\n.font-medium {\\n\\tfont-weight: 500;\\n}\\n.uppercase {\\n\\ttext-transform: uppercase;\\n}\\n.tracking-\\\\[1\\\\.7px\\\\] {\\n\\tletter-spacing: 1.7px;\\n}\\n.tracking-wider {\\n\\tletter-spacing: 0.05em;\\n}\\n.tracking-widest {\\n\\tletter-spacing: 0.1em;\\n}\\n.text-white {\\n\\t--tw-text-opacity: 1;\\n\\tcolor: rgba(255, 255, 255, var(--tw-text-opacity));\\n}\\n.text-\\\\[\\\\#B296FF\\\\] {\\n\\t--tw-text-opacity: 1;\\n\\tcolor: rgba(178, 150, 255, var(--tw-text-opacity));\\n}\\n\\n* {\\n  padding: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n}\\n\\n@media (min-width: 768px) {\\n\\n\\t.md\\\\:top-\\\\[140px\\\\] {\\n\\t\\ttop: 140px;\\n\\t}\\n}\\n\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/globals.css\",\"webpack://styles/%3Cinput%20css%20171z0r%3E\",\"webpack://styles/%3Cinput%20css%20wuXsY5%3E\",\"<no source>\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"\\n\\n\\n@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\\n\\n* {\\n  padding: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n}\\n\\n\",\"/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\\n\\n/*\\nDocument\\n========\\n*/\\n\\n/**\\nUse a better box model (opinionated).\\n*/\\n\\n*,\\n::before,\\n::after {\\n\\tbox-sizing: border-box;\\n}\\n\\n/**\\nUse a more readable tab size (opinionated).\\n*/\\n\\nhtml {\\n\\t-moz-tab-size: 4;\\n\\ttab-size: 4;\\n}\\n\\n/**\\n1. Correct the line height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n*/\\n\\nhtml {\\n\\tline-height: 1.15; /* 1 */\\n\\t-webkit-text-size-adjust: 100%; /* 2 */\\n}\\n\\n/*\\nSections\\n========\\n*/\\n\\n/**\\nRemove the margin in all browsers.\\n*/\\n\\nbody {\\n\\tmargin: 0;\\n}\\n\\n/**\\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\\n*/\\n\\nbody {\\n\\tfont-family:\\n\\t\\tsystem-ui,\\n\\t\\t-apple-system, /* Firefox supports this but not yet `system-ui` */\\n\\t\\t'Segoe UI',\\n\\t\\tRoboto,\\n\\t\\tHelvetica,\\n\\t\\tArial,\\n\\t\\tsans-serif,\\n\\t\\t'Apple Color Emoji',\\n\\t\\t'Segoe UI Emoji';\\n}\\n\\n/*\\nGrouping content\\n================\\n*/\\n\\n/**\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n*/\\n\\nhr {\\n\\theight: 0; /* 1 */\\n\\tcolor: inherit; /* 2 */\\n}\\n\\n/*\\nText-level semantics\\n====================\\n*/\\n\\n/**\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr[title] {\\n\\ttext-decoration: underline dotted;\\n}\\n\\n/**\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n\\tfont-weight: bolder;\\n}\\n\\n/**\\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\\n2. Correct the odd 'em' font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n\\tfont-family:\\n\\t\\tui-monospace,\\n\\t\\tSFMono-Regular,\\n\\t\\tConsolas,\\n\\t\\t'Liberation Mono',\\n\\t\\tMenlo,\\n\\t\\tmonospace; /* 1 */\\n\\tfont-size: 1em; /* 2 */\\n}\\n\\n/**\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n\\tfont-size: 80%;\\n}\\n\\n/**\\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n\\tfont-size: 75%;\\n\\tline-height: 0;\\n\\tposition: relative;\\n\\tvertical-align: baseline;\\n}\\n\\nsub {\\n\\tbottom: -0.25em;\\n}\\n\\nsup {\\n\\ttop: -0.5em;\\n}\\n\\n/*\\nTabular data\\n============\\n*/\\n\\n/**\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n*/\\n\\ntable {\\n\\ttext-indent: 0; /* 1 */\\n\\tborder-color: inherit; /* 2 */\\n}\\n\\n/*\\nForms\\n=====\\n*/\\n\\n/**\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n\\tfont-family: inherit; /* 1 */\\n\\tfont-size: 100%; /* 1 */\\n\\tline-height: 1.15; /* 1 */\\n\\tmargin: 0; /* 2 */\\n}\\n\\n/**\\nRemove the inheritance of text transform in Edge and Firefox.\\n1. Remove the inheritance of text transform in Firefox.\\n*/\\n\\nbutton,\\nselect { /* 1 */\\n\\ttext-transform: none;\\n}\\n\\n/**\\nCorrect the inability to style clickable types in iOS and Safari.\\n*/\\n\\nbutton,\\n[type='button'],\\n[type='reset'],\\n[type='submit'] {\\n\\t-webkit-appearance: button;\\n}\\n\\n/**\\nRemove the inner border and padding in Firefox.\\n*/\\n\\n::-moz-focus-inner {\\n\\tborder-style: none;\\n\\tpadding: 0;\\n}\\n\\n/**\\nRestore the focus styles unset by the previous rule.\\n*/\\n\\n:-moz-focusring {\\n\\toutline: 1px dotted ButtonText;\\n}\\n\\n/**\\nRemove the additional ':invalid' styles in Firefox.\\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\\n*/\\n\\n:-moz-ui-invalid {\\n\\tbox-shadow: none;\\n}\\n\\n/**\\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\\n*/\\n\\nlegend {\\n\\tpadding: 0;\\n}\\n\\n/**\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n\\tvertical-align: baseline;\\n}\\n\\n/**\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n\\theight: auto;\\n}\\n\\n/**\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n\\t-webkit-appearance: textfield; /* 1 */\\n\\toutline-offset: -2px; /* 2 */\\n}\\n\\n/**\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n\\t-webkit-appearance: none;\\n}\\n\\n/**\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to 'inherit' in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n\\t-webkit-appearance: button; /* 1 */\\n\\tfont: inherit; /* 2 */\\n}\\n\\n/*\\nInteractive\\n===========\\n*/\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n\\tdisplay: list-item;\\n}\\n\",\"/**\\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\\n * A thin layer on top of normalize.css that provides a starting point more\\n * suitable for web applications.\\n */\\n\\n/**\\n * Removes the default spacing and border for appropriate elements.\\n */\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nbutton {\\n  background-color: transparent;\\n  background-image: none;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nol,\\nul {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/**\\n * Tailwind custom reset styles\\n */\\n\\n/**\\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\\n *    sans-serif font stack as a fallback) as a sane default.\\n * 2. Use Tailwind's default \\\"normal\\\" line-height so the user isn't forced\\n *    to override it to ensure consistency even when using the default theme.\\n */\\n\\nhtml {\\n  font-family: theme('fontFamily.sans', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"); /* 1 */\\n  line-height: 1.5; /* 2 */\\n}\\n\\n\\n/**\\n * Inherit font-family and line-height from `html` so users can set them as\\n * a class directly on the `html` element.\\n */\\n\\nbody {\\n  font-family: inherit;\\n  line-height: inherit;\\n}\\n\\n/**\\n * 1. Prevent padding and border from affecting element width.\\n *\\n *    We used to set this in the html element and inherit from\\n *    the parent element for everything else. This caused issues\\n *    in shadow-dom-enhanced elements like <details> where the content\\n *    is wrapped by a div with box-sizing set to `content-box`.\\n *\\n *    https://github.com/mozdevs/cssremedy/issues/4\\n *\\n *\\n * 2. Allow adding a border to an element by just adding a border-width.\\n *\\n *    By default, the way the browser specifies that an element should have no\\n *    border is by setting it's border-style to `none` in the user-agent\\n *    stylesheet.\\n *\\n *    In order to easily add borders to elements by just setting the `border-width`\\n *    property, we change the default border-style for all elements to `solid`, and\\n *    use border-width to hide them instead. This way our `border` utilities only\\n *    need to set the `border-width` property instead of the entire `border`\\n *    shorthand, making our border utilities much more straightforward to compose.\\n *\\n *    https://github.com/tailwindcss/tailwindcss/pull/116\\n */\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: currentColor; /* 2 */\\n}\\n\\n/*\\n * Ensure horizontal rules are visible by default\\n */\\n\\nhr {\\n  border-top-width: 1px;\\n}\\n\\n/**\\n * Undo the `border-style: none` reset that Normalize applies to images so that\\n * our `border-{width}` utilities have the expected effect.\\n *\\n * The Normalize reset is unnecessary for us since we default the border-width\\n * to 0 on all elements.\\n *\\n * https://github.com/tailwindcss/tailwindcss/issues/362\\n */\\n\\nimg {\\n  border-style: solid;\\n}\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1;\\n  color: theme('colors.gray.400', #a1a1aa);\\n}\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/**\\n * Override legacy focus reset from Normalize with modern Firefox focus styles.\\n *\\n * This is actually an improvement over the new defaults in Firefox in our testing,\\n * as it triggers the better focus styles even for links, which still use a dotted\\n * outline in Firefox by default.\\n */\\n \\n:-moz-focusring {\\n\\toutline: auto;\\n}\\n\\ntable {\\n  border-collapse: collapse;\\n}\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/**\\n * Reset links to optimize for opt-in styling instead of\\n * opt-out.\\n */\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/**\\n * Reset form element properties that are easy to forget to\\n * style explicitly so you don't inadvertently introduce\\n * styles that deviate from your design system. These styles\\n * supplement a partial reset that is already applied by\\n * normalize.css.\\n */\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  padding: 0;\\n  line-height: inherit;\\n  color: inherit;\\n}\\n\\n/**\\n * Use the configured 'mono' font family for elements that\\n * are expected to be rendered with a monospace font, falling\\n * back to the system monospace stack if there is no configured\\n * 'mono' font family.\\n */\\n\\npre,\\ncode,\\nkbd,\\nsamp {\\n  font-family: theme('fontFamily.mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace);\\n}\\n\\n/**\\n * 1. Make replaced elements `display: block` by default as that's\\n *    the behavior you want almost all of the time. Inspired by\\n *    CSS Remedy, with `svg` added as well.\\n *\\n *    https://github.com/mozdevs/cssremedy/issues/14\\n * \\n * 2. Add `vertical-align: middle` to align replaced elements more\\n *    sensibly by default when overriding `display` by adding a\\n *    utility like `inline`.\\n *\\n *    This can trigger a poorly considered linting error in some\\n *    tools but is included by design.\\n * \\n *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210\\n */\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/**\\n * Constrain images and videos to the parent width and preserve\\n * their intrinsic aspect ratio.\\n *\\n * https://github.com/mozdevs/cssremedy/issues/14\\n */\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n/**\\n * Ensure the default browser behavior of the `hidden` attribute.\\n */\\n\\n[hidden] {\\n  display: none;\\n}\\n\",null],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles/globals.css\n");

/***/ })

});